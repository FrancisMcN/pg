/* Generated by pg (Tue Oct 15 22:34:46 BST 2024) */

class Parser {

	private Stack<Object> stack;
	
	public Parser() { this.stack = new Stack<>(); }

	public void expr() {
		do {
			if (nextTokenIs(SYMBOL)) {
				System.out.println("hello world");
				return;
			}
		} while (nextTokenIs(SYMBOL));
	}

	public void optional() {
		if (nextTokenIs(BOOLEAN)) {
			System.out.println("hello world");
			return;
		} else if (nextTokenIs(FLOAT)) {
			System.out.println("hello world");
			return;
		}
		if (nextTokenIs(QUOTE)) {
			System.out.println("hello world");
			return;
		}
	}

	public void list() {
		while (nextTokenIs(NUMBER) || nextTokenIs(STRING)) {
			if (nextTokenIs(NUMBER)) {
				System.out.println("hello world");
				return;
			} else if (nextTokenIs(STRING)) {
				System.out.println("hello world");
				return;
			}
		}
	}

	private boolean nextTokenIs(TokenType tokenType) {
		return scanner.peek().type() == tokenType;
	}
}

